{% if isPost %}
	{% set summaryCx = summary %}
	{% set authorCx = author %}
	{% set featuredImageCx = featuredImage %}
	<meta name="twitter:card" content="summary_large_image" />
	<meta property="og:type" content="article" />
{% else %}
	{% set summaryCx = site.summary %}
	{% set authorCx = site.author %}
	{% set featuredImageCx = site.profilePic %}
	<meta name="twitter:card" content="summary" />
	<meta property="og:type" content="website" />
{% endif %}

<title>{{ title }}</title>
<meta name="description" content="{{ summaryCx }}" />
<meta name="author" content="@{{ authorCx }}" />
<link rel="image_src" href="{{ site.url }}{{ featuredImageCx | imagePath | url }}" />

<meta property="og:title" content="{{ title }}" />
<meta property="og:site" content="@{{ authorCx }}" />
<meta property="og:description" content="{{ summaryCx }}" />
<meta property="og:url" content="{{ site.url }}" />
<meta property="og:image" content="{{ site.url }}{{ featuredImageCx | imagePath | url }}" />

<meta name="twitter:title" content="{{ title }}" />
<meta name="twitter:site" content="@{{ authorCx }}" />
<meta name="twitter:description" content="{{ summaryCx }}" />
<meta name="twitter:image" content="{{ site.url }}{{ featuredImageCx | imagePath | url }}" />

<!-- <meta property="article:published_time" content="2022-03-23T03:37:30+05:30">
<meta property="article:modified_time" content="2022-07-07T00:53:30+05:30">

<link rel="canonical" href="https://store.steampowered.com/news/group/39049601/view/5320445713307280739"> -->

<script>
	!(function (t, e) {
		var o, n, p, r;
		e.__SV ||
			((window.posthog = e),
			(e._i = []),
			(e.init = function (i, s, a) {
				function g(t, e) {
					var o = e.split(".");
					2 == o.length && ((t = t[o[0]]), (e = o[1])),
						(t[e] = function () {
							t.push([e].concat(Array.prototype.slice.call(arguments, 0)));
						});
				}
				((p = t.createElement("script")).type = "text/javascript"),
					(p.async = !0),
					(p.src = s.api_host.replace(".i.posthog.com", "-assets.i.posthog.com") + "/static/array.js"),
					(r = t.getElementsByTagName("script")[0]).parentNode.insertBefore(p, r);
				var u = e;
				for (
					void 0 !== a ? (u = e[a] = []) : (a = "posthog"),
						u.people = u.people || [],
						u.toString = function (t) {
							var e = "posthog";
							return "posthog" !== a && (e += "." + a), t || (e += " (stub)"), e;
						},
						u.people.toString = function () {
							return u.toString(1) + ".people (stub)";
						},
						o =
							"init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey getNextSurveyStep identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug".split(
								" "
							),
						n = 0;
					n < o.length;
					n++
				)
					g(u, o[n]);
				e._i.push([i, s, a]);
			}),
			(e.__SV = 1));
	})(document, window.posthog || []);
	posthog.init("phc_fAzGUd9U5S0qdDoWb3vPT8wMzQIj27590AaGYuaH65e", {
		api_host: "https://us.i.posthog.com",
		person_profiles: "always",
	});
</script>
